<?xml version="1.0"?>
<ruleset name="ObjectCalisthenics">
    <description>Object Calisthenics coding standard.</description>

    <!-- Rule #1: Only one indentation level per function/method -->
    <rule ref="Sniffs/Metrics/OneIndentationLevelSniff.php"/>

    <!-- Rule #2: There is no "else" -->
    <rule ref="Sniffs/ControlStructures/NoElseSniff.php"/>

    <!-- Rule #3: Encapsulate all primitive types and strings -->
    <!-- Cannot be implemented, since it requires to be encapsulated ONLY if they have behavior -->

    <!-- Rule #4: Only one object operator (->) per line -->
    <rule ref="Sniffs/CodeAnalysis/OneObjectOperatorPerLineSniff.php"/>

    <!-- Rule #5: Do not abbreviate -->
    <rule ref="Sniffs/NamingConventions/VariableLengthSniff.php"/>
    <rule ref="Sniffs/NamingConventions/FunctionLengthSniff.php"/>
    <rule ref="Sniffs/NamingConventions/ConstantLengthSniff.php"/>
    <rule ref="Sniffs/NamingConventions/ClassLengthSniff.php"/>

    <!-- Rule #6: Keep your classes small -->
    <!-- 15 classes per namespace -->
    <!-- Cannot be implemented, since PHPCS can only be executed over files -->
    <!-- 200 LOC for interfaces, classes and traits -->
    <rule ref="Sniffs/Files/InterfaceLengthSniff.php"/>
    <rule ref="Sniffs/Files/ClassLengthSniff.php"/>
    <rule ref="Sniffs/Files/TraitLengthSniff.php"/>
    <!-- 10 methods per class -->
    <rule ref="Sniffs/Metrics/MethodPerClassLimitSniff.php"/>
    <!-- 20 LOC for methods -->
    <rule ref="Sniffs/Files/FunctionLengthSniff.php"/>

    <!-- Rule #7: Limit the number of object instances per class (2 to 5) -->
    <rule ref="Sniffs/CodeAnalysis/InstancePropertyPerClassLimitSniff.php"/>

    <!-- Rule #8: Use first class Collections -->
    <rule ref="Sniffs/CodeAnalysis/ArrayPropertyPerClassLimitSniff.php"/>

    <!-- Rule #9: Use getters/setter -->
    <rule ref="Sniffs/Classes/PropertyVisibilitySniff.php"/>

    <!-- Rule #10: Document your code -->
    <rule ref="Squiz.Commenting.DocCommentAlignment"/>
    <!--rule ref="Squiz.Commenting.ClassComment"/-->
    <rule ref="Squiz.Commenting.VariableComment"/>
    <rule ref="Squiz.Commenting.FunctionComment"/>
</ruleset>
