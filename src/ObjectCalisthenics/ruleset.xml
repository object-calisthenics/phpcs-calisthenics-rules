<?xml version="1.0"?>
<ruleset name="ObjectCalisthenics">
    <description>Object Calisthenics coding standard.</description>

    <!-- Rule #1: Only one indentation level per function/method -->
    <rule ref="ObjectCalisthenics.Metrics.OneIndentationLevel"/>

    <!-- Rule #2: There is no "else" -->
    <rule ref="ObjectCalisthenics.ControlStructures.NoElse"/>

    <!-- Rule #3: Encapsulate all primitive types and strings -->
    <!-- Cannot be implemented, since it requires to be encapsulated ONLY if they have behavior -->

    <!-- Rule #4: Only one object operator (->) per line -->
    <rule ref="ObjectCalisthenics.CodeAnalysis.OneObjectOperatorPerLine"/>

    <!-- Rule #5: Do not abbreviate -->
    <rule ref="ObjectCalisthenics.NamingConventions.VariableLength"/>
    <rule ref="ObjectCalisthenics.NamingConventions.FunctionLength"/>
    <rule ref="ObjectCalisthenics.NamingConventions.ConstantLength"/>
    <rule ref="ObjectCalisthenics.NamingConventions.ClassLength"/>

    <!-- Rule #6: Keep your classes small -->
    <!-- 15 classes per namespace -->
    <!-- Cannot be implemented, since PHPCS can only be executed over files -->
    <!-- 200 LOC for interfaces, classes and traits -->
    <rule ref="ObjectCalisthenics.Files.ClassElementLength"/>
    <!-- 10 methods per class -->
    <rule ref="ObjectCalisthenics.Metrics.MethodPerClassLimit"/>
    <!-- 20 LOC for methods -->
    <rule ref="ObjectCalisthenics.Files.FunctionLength"/>

    <!-- Rule #7: Limit the number of object instances per class (2 to 5) -->
    <rule ref="ObjectCalisthenics.CodeAnalysis.InstancePropertyPerClassLimit"/>

    <!-- Rule #8: Use first class Collections -->
    <rule ref="ObjectCalisthenics.CodeAnalysis.ArrayPropertyPerClassLimit"/>

    <!-- Not sure what this should do and tests keep failing. Temp off. -->
    <rule ref="ObjectCalisthenics.CodeAnalysis.ArrayPropertyPerClassLimit.TooManyUntrackedProperties">
        <severity>0</severity>
    </rule>

    <!-- Rule #9: Use getters/setter -->
    <rule ref="ObjectCalisthenics.Classes.PropertyVisibility"/>

    <!-- Rule #10: Document your code -->
    <rule ref="Squiz.Commenting.DocCommentAlignment"/>

    <!-- This sub-rule enforces integer over int. Be free. -->
    <rule ref="Squiz.Commenting.VariableComment.IncorrectVarType">
        <severity>0</severity>
    </rule>
    <!-- This sub-rule ignores {@inheritdoc}. Be free. -->
    <rule ref="Squiz.Commenting.VariableComment.MissingVar">
        <severity>0</severity>
    </rule>

    <rule ref="Squiz.Commenting.FunctionComment"/>

    <!-- This sub-rule enforces integer over int. Be free. -->
    <rule ref="Squiz.Commenting.FunctionComment.InvalidReturn">
        <severity>0</severity>
    </rule>
    <!-- This sub-rule ignores {@inheritdoc}. Be free. -->
    <rule ref="Squiz.Commenting.FunctionComment.MissingParamTag">
        <severity>0</severity>
    </rule>
    <!-- This sub-rule ignores {@inheritdoc}. Be free. -->
    <rule ref="Squiz.Commenting.FunctionComment.MissingReturn">
        <severity>0</severity>
    </rule>
    <!-- This sub-rule enforces integer over int. Be free. -->
    <rule ref="Squiz.Commenting.FunctionComment.IncorrectParamVarName">
        <severity>0</severity>
    </rule>
    <!-- This sub-rule enforces parameter comment. Be free. -->
    <rule ref="Squiz.Commenting.FunctionComment.MissingParamComment">
        <severity>0</severity>
    </rule>
    <!-- This sub-rule breaks on string types. Be free. -->
    <rule ref="Squiz.Commenting.FunctionComment.TypeHintMissing">
        <severity>0</severity>
    </rule>
    <!-- This sub-rule enforces 2 spaces after param type. Be free. -->
    <rule ref="Squiz.Commenting.FunctionComment.SpacingAfterParamType">
        <severity>0</severity>
    </rule>
    <!-- This sub-rule enforces @throws tag. Be free. -->
    <rule ref="Squiz.Commenting.FunctionComment.EmptyThrows">
        <severity>0</severity>
    </rule>
    <!-- This sub-rule requires a doc comment, even if there is nothing to comment. Be free. -->
    <rule ref="Squiz.Commenting.FunctionComment.Missing">
        <severity>0</severity>
    </rule>
</ruleset>
